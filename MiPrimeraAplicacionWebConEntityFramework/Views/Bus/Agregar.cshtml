@model MiPrimeraAplicacionWebConEntityFramework.Models.BusCLS

@{
    ViewBag.Title = "Agregar";

    List<SelectListItem> listaTipoBus = (List<SelectListItem>)ViewBag.listaTipoBus;
    List<SelectListItem> listaMarca = (List<SelectListItem>)ViewBag.listaMarca;
    List<SelectListItem> listaModelo = (List<SelectListItem>)ViewBag.listaModelo;
    List<SelectListItem> listaSucursal = (List<SelectListItem>)ViewBag.listaSucursal;
}

<h2>Agregar</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Agregar", "Bus", FormMethod.Post,new { @id="frmAgregar"}))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>BusCLS</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.iidSucursal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidSucursal", listaSucursal, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidSucursal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidTipoBus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidTipoBus", listaTipoBus, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidTipoBus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.placa, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.placa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.placa, "", new { @class = "text-danger" })
                        @if (Model != null && Model.mensajeError != null)
                        {
                            @Html.Label(Model.mensajeError, new { @class = "text-danger" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechaCompra, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaCompra, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechaCompra, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidModelo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidModelo", listaModelo, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidModelo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numeroFilas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numeroFilas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numeroFilas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numeroColumnas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numeroColumnas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numeroColumnas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidmarca, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidmarca", listaMarca, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidmarca, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                            Guardar
                        </button>
                        @Html.ActionLink("Regresar", "Index", "Bus", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">¿Desea guardar los cambios?</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div style="padding:1em">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" onclick="Agregar()" class="btn btn-info">Aceptar</button>
            </div>
        </div>
    </div>
</div>

<script>
    function Agregar() {
        var frmAgregar = document.getElementById("frmAgregar");
        frmAgregar.submit();
    }
</script>